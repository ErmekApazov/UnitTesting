package contact;

import java.util.Collection;
import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

public class ContactManager {

    Map<String, Contact> contactList = new ConcurrentHashMap<>();

    public void addContact(String firstName, String lastName, String phoneNumber){

        /*Create a new Contact object:

            Contact contact = new Contact(firstName, lastName, phoneNumber);
                    Validate the contact (e.g., check for null values, empty fields, etc.):

            validateContact(contact);
                    Check if the contact already exists using the generated key:

            checkIfContactAlreadyExist(contact);
                    This method checks if contactList already contains the key generated by generateKey(contact).
                    If the key exists, it throws an exception to prevent duplicates.
            Generate the key and add the contact to contactList:

            contactList.put(generateKey(contact), contact);
                    If the key does not exist, the contact is added to the contactList map with its unique key.*/

        Contact contact = new Contact(firstName, lastName, phoneNumber);

        validateContact(contact);
        checkIfContactAlreadyExist(contact);

        contactList.put(generateKey(contact), contact);

                /*  How generateKey(contact) Works?:
                    It generates a unique key for each contact based on their attributes (firstName, lastName, phoneNumber).
                    This key is used to check for duplicates before adding the contact.
                    The key helps store and retrieve contacts efficiently.*/
    }

    public Collection<Contact> getAllContacts(){
        return contactList.values();
    }

    public void validateContact(Contact contact){
        contact.validateFirstName();
        contact.validateLastName();
        contact.validatePhoneNUmber();
    }

    public void checkIfContactAlreadyExist(Contact contact){
        if(contactList.containsKey(generateKey(contact))){
            throw new RuntimeException("Contact already exists");
        }
    }

    private String generateKey(Contact contact) {
        return contact.getFirstName()  + "-" + contact.getPhoneNumber() + "-" + contact.getPhoneNumber() ;
    }

}
